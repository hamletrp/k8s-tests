apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  role: eksctl-cluster-lab-13-nodegroup-linu-NodeInstanceRole
  # instanceProfile: KarpenterInstanceProfile-cluster-lab-13

  # Required, discovers subnets to attach to instances
  subnetSelectorTerms:
  # - tags:
  # karpenter.sh/discovery: cluster-lab-13
  - id: subnet-08aa30c135447dd9d
  - id: subnet-09fb6961a8451a8b0
  # Required, discovers security groups to attach to instances
  securityGroupSelectorTerms:
  # - tags:
  #     karpenter.sh/discovery: cluster-lab-13
  # - name: my-security-group
  - id: sg-079e59b31d813ec82
  # amiFamily: AL2023
  amiFamily: Bottlerocket

  # Required
  amiSelectorTerms:
  - alias: bottlerocket@latest
    # - alias: al2023@latest
    # - alias: al2@latest # <- GPU Optimized AMD AMI 
    # - tags:
    #     karpenter.sh/discovery: "${CLUSTER_NAME}"
    #     environment: test

    # amiFamily: Bottlerocket
    # amiFamily: AL2
    # amiFamily: AL2023
    # amiFamily: Ubuntu
    # amiSelectorTerms:
    # - matchExpressions:
    #     - key: karpenter.k8s.aws/owner-id
    #       operator: In
    #       values: ["amazon"]
    # - key: karpenter.k8s.aws/ami-id
    #   operator: In
    #   values: ["ami-0123456789abcdef0"]  # Optional, to pin exact AMI

    # amiFamily: Ubuntu
    # - matchExpressions:
    #   - key: karpenter.k8s.aws/owner-id
    #     operator: In
    #     values: ["099720109477"]  # Canonical's AWS account



    # Optional, propagates tags to underlying EC2 resources
  tags:
    team: hamletlab-team
    app: test-app
    # used by karpenter_controller_role conditional terminate instance
    karpenter.sh/discovery: "cluster-lab-13"
